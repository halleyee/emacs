;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(setq package-archives '(("gnu"   . "http://mirrors.tuna.tsinghua.edu.cn/elpa/gnu/")
                         ("melpa" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/melpa/")
                         ("marmalade" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/marmalade/")
			 ("org" . "http://mirrors.tuna.tsinghua.edu.cn/elpa/org/")))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auto-save-default nil)
 '(blink-cursor-mode nil)
 '(indent-tabs-mode nil)
 '(inhibit-startup-buffer-menu t)
 '(inhibit-startup-echo-area-message "hmsu")
 '(inhibit-startup-screen t)
 '(initial-scratch-message nil)
 '(make-backup-files nil)
 '(notdeft-directories '("~/org/"))
 '(package-selected-packages
   '(org org-roam org-roam-server fzf rg xcscope helm ggtags ag))
 '(require-final-newline t)
 '(show-paren-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(region ((t (:extend t :background "LightGoldenrod2" :distant-foreground "gtk_selection_fg_color")))))
(global-set-key "\C-cfa" 'find-file-at-point)
(global-set-key "\C-ck" 'kill-this-buffer)
(global-set-key "\C-cl" 'toggle-truncate-lines)
(global-set-key "\C-cr" 'revert-buffer)

(add-hook 'c++-mode-hook
          '(lambda ()
             (ggtags-mode t)
             (cscope-minor-mode)
             (hs-minor-mode)
             (c-set-style "stroustrup")))
(add-hook 'c-mode-hook
          '(lambda ()
             (ggtags-mode t)
             (cscope-minor-mode)
             (hs-minor-mode)
             (c-set-style "bsd")
	     (c-toggle-comment-style -1)
             (setq c-basic-offset 4)))
;; org
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-coc" 'org-roam-capture)
(global-set-key "\C-cof" 'org-roam-find-file)
(setq org-capture-templates
      '(("t" "Todo" entry (file "~/org/todo.org")
         "* TODO %?\n  %i\n  %a")
        ("j" "Journal" entry (file+olp+datetree "~/org/journal.org")
         "* %?\nEntered on %U\n  %i\n  %a" :tree-type week)))
;; notdeft
(add-to-list 'load-path "/home/hmsu/.emacs.d/notdeft" t)
(add-to-list 'load-path "/home/hmsu/.emacs.d/notdeft/extras" t)
(require 'notdeft-autoloads)
(require 'notdeft-global)
(global-set-key "\C-cn" 'notdeft-global-map)
(setq notdeft-xapian-program "/home/hmsu/.emacs.d/notdeft/xapian/notdeft-xapian")

(require 'helm-config)
(helm-mode 1)
(define-key global-map [remap switch-to-buffer] 'helm-mini)
(define-key global-map [remap find-file] 'helm-find-files)
(define-key global-map [remap occur] 'helm-occur)
(define-key global-map [remap list-buffers] 'helm-buffers-list)
(define-key global-map [remap dabbrev-expand] 'helm-dabbrev)
(define-key global-map [remap execute-extended-command] 'helm-M-x)
(define-key global-map [remap apropos-command] 'helm-apropos)
(unless (boundp 'completion-in-region-function)
  (define-key lisp-interaction-mode-map [remap completion-at-point] 'helm-lisp-completion-at-point)
  (define-key emacs-lisp-mode-map       [remap completion-at-point] 'helm-lisp-completion-at-point))

(setq ; helm-split-window-in-side-p           t ; open helm buffer inside current window, not occupy whole other window
      helm-move-to-line-cycle-in-source     t ; move to end or beginning of source when reaching top or bottom of source.
      helm-ff-search-library-in-sexp        t ; search for library in `require' and `declare-function' sexp.
      helm-scroll-amount                    8 ; scroll 8 lines other window using M-<next>/M-<prior>
      helm-ff-file-name-history-use-recentf t
      helm-echo-input-in-header-line t)

(set-face-attribute
 'default nil
 :font (font-spec :name "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-15-*-*-*-m-0-iso10646-1"))
(dolist (charset '(kana han symbol cjk-misc bopomofo))
  (set-fontset-font
   (frame-parameter nil 'font)
   charset
   (font-spec :name "-PfEd-AR PL UKai TW MBE-normal-normal-normal-*-*-*-*-*-*-0-iso10646-1")))
(setq face-font-rescale-alist '(("AR PL UKai TW MBE" . 1.25)))
